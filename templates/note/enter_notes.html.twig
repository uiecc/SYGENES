{# templates/note/enter_notes.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Saisie des notes - {{ ec.name }}{% endblock %}

{% block body %}
<div class="container mx-auto px-4 py-8">
    <h1 class="text-2xl font-bold mb-2">Saisie des notes</h1>
    <h2 class="text-xl text-gray-600 mb-6">{{ ec.name }} ({{ ec.code }}) - {{ level.name }}</h2>
    
    {% for message in app.flashes('success') %}
        <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4">
            {{ message }}
        </div>
    {% endfor %}
    
    <div class="bg-white shadow-md rounded-lg overflow-hidden mb-8">
        <div class="bg-gray-50 px-6 py-4 border-b">
            <div class="flex justify-between items-center">
                <h3 class="font-semibold">Informations</h3>
                <span class="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded">
                    Année académique: {{ academicYear }}
                </span>
            </div>
        </div>
        <div class="p-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <p class="text-gray-600"><strong>UE:</strong> {{ ec.ue.code }} - {{ ec.ue.name }}</p>
                    <p class="text-gray-600"><strong>Semestre:</strong> {{ ec.ue.semester.name }}</p>
                </div>
                <div>
                    <p class="text-gray-600"><strong>Crédits:</strong> {{ ec.credit }}</p>
                    <p class="text-gray-600"><strong>Enseignant:</strong> 
                        {% if ec.teacher %}
                            {{ ec.teacher.firstName }} {{ ec.teacher.lastName }}
                        {% else %}
                            Non assigné
                        {% endif %}
                    </p>
                </div>
            </div>
        </div>
    </div>
    
    <form method="post" action="{{ path('app_note_save', {'ec': ec.id}) }}" class="mb-8">
        <div class="bg-white shadow-md rounded-lg overflow-hidden">
            <div class="bg-gray-50 px-6 py-4 border-b">
                <div class="flex items-center space-x-4">
                    <h3 class="font-semibold">Configuration</h3>
                    <div class="flex items-center">
                        <input type="checkbox" name="has_tp" id="has_tp" class="mr-2" {% if ec.hasTP %}checked{% endif %}>
                        <label for="has_tp">Cet EC comprend des Travaux Pratiques (TP)</label>
                    </div>
                </div>
                <div class="mt-2 text-sm text-gray-500">
                    <p>CC: noté sur 30 {% if ec.hasTP %}| TP: noté sur 20{% endif %}</p>
                </div>
            </div>
        </div>
        
        <div class="bg-white shadow-md rounded-lg overflow-hidden mt-6">
            <div class="bg-gray-50 px-6 py-4 border-b">
                <h3 class="font-semibold">Notes des étudiants</h3>
            </div>
            <div class="p-6">
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Matricule</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nom et Prénom</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">CC (sur 30)</th>
                                <th id="tp_header" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider {% if not ec.hasTP %}hidden{% endif %}">TP (sur 20)</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            {% for student in students %}
                                {% set note = existingNotes[student.id] %}
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <input type="hidden" name="student[]" value="{{ student.id }}">
                                        {{ student.matricule }}
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">{{ student.lastName }} {{ student.firstName }}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <input type="number" 
                                               name="cc[{{ student.id }}]" 
                                               value="{{ note.ccNote }}" 
                                               min="0" 
                                               max="30" 
                                               step="0.25" 
                                               class="border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 w-20">
                                    </td>
                                    <td id="tp_cell_{{ student.id }}" class="px-6 py-4 whitespace-nowrap {% if not ec.hasTP %}hidden{% endif %}">
                                        <input type="number" 
                                               name="tp[{{ student.id }}]" 
                                               value="{{ note.tpNote }}" 
                                               min="0" 
                                               max="20" 
                                               step="0.25" 
                                               class="border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 w-20">
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap font-medium">
                                        <span id="total_{{ student.id }}">
                                            {% if note.getTotalNote is defined and note.getTotalNote %}
                                                {{ note.getTotalNote|number_format(2) }}
                                            {% else %}
                                                -
                                            {% endif %}
                                        </span>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
                
                <div class="mt-6 flex justify-end">
                    <button type="submit" class="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700">
                        Enregistrer les notes
                    </button>
                </div>
            </div>
        </div>
    </form>
    
    <div class="mt-4">
        <a href="{{ path('app_note_index') }}" class="text-indigo-600 hover:text-indigo-900">
            Retour à la liste des notes
        </a>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const hasTPCheckbox = document.getElementById('has_tp');
    const tpHeader = document.getElementById('tp_header');
    const tpCells = document.querySelectorAll('[id^="tp_cell_"]');
    
    // Fonction pour calculer le total pour un étudiant
    function calculateTotal(studentId) {
        const ccInput = document.querySelector(`input[name="cc[${studentId}]"]`);
        const tpInput = document.querySelector(`input[name="tp[${studentId}]"]`);
        const totalSpan = document.getElementById(`total_${studentId}`);
        
        let total = 0;
        let hasValue = false;
        
        if (ccInput && ccInput.value) {
            total += parseFloat(ccInput.value);
            hasValue = true;
        }
        
        if (hasTPCheckbox.checked && tpInput && tpInput.value) {
            total += parseFloat(tpInput.value);
            hasValue = true;
        }
        
        totalSpan.textContent = hasValue ? total.toFixed(2) : '-';
    }
    
    // Fonction pour afficher/masquer les champs TP
    function toggleTPFields() {
        const isVisible = hasTPCheckbox.checked;
        
        tpHeader.classList.toggle('hidden', !isVisible);
        
        tpCells.forEach(cell => {
            cell.classList.toggle('hidden', !isVisible);
        });
        
        // Recalculer tous les totaux
        students.forEach(studentId => {
            calculateTotal(studentId);
        });
    }
    
    // Écouter les changements sur la case à cocher TP
    hasTPCheckbox.addEventListener('change', toggleTPFields);
    
    // Créer un tableau des IDs d'étudiants
    const students = [];
    {% for student in students %}
        students.push({{ student.id }});
    {% endfor %}
    
    // Ajouter des écouteurs sur tous les champs de notes
    students.forEach(studentId => {
        const ccInput = document.querySelector(`input[name="cc[${studentId}]"]`);
        const tpInput = document.querySelector(`input[name="tp[${studentId}]"]`);
        
        if (ccInput) {
            ccInput.addEventListener('input', () => calculateTotal(studentId));
        }
        
        if (tpInput) {
            tpInput.addEventListener('input', () => calculateTotal(studentId));
        }
    });
});
</script>
{% endblock %}