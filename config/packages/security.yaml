security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Hiérarchie des rôles adaptée à vos rôles existants
    role_hierarchy:
        ROLE_SCHOOL_MANAGER: [ROLE_FIELD_MANAGER, ROLE_ALLOWED_TO_SWITCH]
        ROLE_FIELD_MANAGER: [ROLE_LEVEL_MANAGER]
        ROLE_LEVEL_MANAGER: [ROLE_USER]
        ROLE_STUDENT: [ROLE_USER]

    providers:
        # Définir plusieurs fournisseurs pour gérer les différentes entités d'utilisateurs
        chain_provider:
            chain:
                providers: [app_user_provider, app_student_provider]
        
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
                
        app_student_provider:
            entity:
                class: App\Entity\Student
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            lazy: true
            provider: chain_provider  # Utilisez le fournisseur en chaîne
            custom_authenticator: App\Security\TwoFactorAuthenticator
            logout:
                path: app_logout
                target: app_login

    access_control:
        # Routes publiques
        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/register, roles: PUBLIC_ACCESS }
        - { path: ^/verify-code, roles: PUBLIC_ACCESS }
        - { path: ^/resend-code, roles: PUBLIC_ACCESS }
        - { path: ^/field-manager/new, roles: PUBLIC_ACCESS }
        - { path: ^/admin/new, roles: PUBLIC_ACCESS }
        - { path: ^/university/new, roles: PUBLIC_ACCESS }
        
        # Routes protégées par rôle
        - { path: ^/admin, roles: ROLE_SCHOOL_MANAGER }
        - { path: ^/school, roles: ROLE_SCHOOL_MANAGER }
        - { path: ^/field-manager, roles: ROLE_FIELD_MANAGER }
        - { path: ^/level-manager, roles: ROLE_LEVEL_MANAGER }
        
        # Les notes ne peuvent être gérées QUE par les non-étudiants
        - { path: ^/notes, roles: IS_AUTHENTICATED_FULLY }
        
        # Les étudiants peuvent accéder à leurs propres résultats
        - { path: ^/results/my-results, roles: ROLE_STUDENT }
        - { path: ^/results/student, roles: [not ROLE_STUDENT, ROLE_USER] }
        
        - { path: ^/student, roles: ROLE_STUDENT }
        
        # Fallback - accès public par défaut
        - { path: ^/, roles: PUBLIC_ACCESS }